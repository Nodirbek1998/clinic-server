{"version":3,"sources":["actions/Types.js","reducers/doctorReducer.js","reducers/errorReducer.js","reducers/PatientReducer.js","reducers/Authreducer.js","reducers/Table.js","reducers/rooms.js","reducers/index.js","store.js","actions/DoctorsActions.js","component/Footer.js","actions/PatientActions.js","component/Card.js","utils/setJWToken.js","actions/AuthAction.js","component/Navbar.js","component/Home.js","component/exceptions/NotFound.js","actions/QueueActions.js","component/Personal.js","component/ListRegister.js","component/authtication/Login.js","component/Header.js","component/admin/Queue.js","component/doctor/Doctor.js","component/common/PrivateRoute.js","component/admin/addDoctor.js","actions/RoomsActions.js","App.js","index.js"],"names":["GET_ERRORS","GET_DOCTORS","GET_DOCTOR","GET_PATIENT_SAVE","GET_QUEUE","GET_TOKEN","GET_DOCTOR_TABLE","GET_QUEUE_TABLE","GET_ALL_ROOMS","initialState","doctors","doctor","patient","queue","token","validToken","tables","user","rooms","combineReducers","state","action","type","payload","errors","auth","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","getDoctor","id","dispatch","a","axios","get","res","data","body","getDoctorTable","error","Footer","className","getQueue","Card","this","props","src","attachment","alt","speciality","firstName","lastName","onClick","to","Component","connect","setJWToken","defaults","headers","common","setCurrentUser","decode","console","log","logout","localStorage","removeItem","Navbar","window","location","href","role","roleName","style","color","username","borderRadius","signUpChecking","signInChecking","Home","getAllDoctors","filter","roles","map","NotFound","getAllQueue","post","Personal","phone","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","newPatient","doctorId","addPatient","history","size","length","sessionStorage","getItem","middleName","data-toggle","data-target","que","index","width","display","price","data-dismiss","placeholder","push","ListRegister","match","params","newProps","setItem","Login","password","getErrors","login","getToken","invalid","attachmentId","jwt_decode","response","Header","Queue","addQueue","deleteQueue","tableBody","row","category","status","fontWeight","verticalAlign","margin","borderTop","Doctor","accepted","tartib","height","fontSize","padding","component","rest","render","addDoctor","Rooms","file","onFileChange","get_all_rooms","files","pushDoctor","marginTop","marginRight","float","htmlFor","required","list","marginLeft","outline","room","floor","number","attach","File","FormData","append","then","catch","err","jwtToken","decoded","App","exact","path","Admin","baseURL","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f823a51.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_DOCTORS = \"GET_DOCTORS\";\r\nexport const GET_DOCTOR = \"GET_DOCTOR\";\r\nexport const GET_PATIENT_SAVE = \"GET_PATIENT_SAVE\";\r\nexport const GET_QUEUE = \"GET_QUEUE\";\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_DOCTOR_TABLE = \"GET_DOCTOR_TABLE\";\r\nexport const GET_QUEUE_TABLE = \"GET_QUEUE_TABLE\";\r\nexport const GET_EDIT_QUEUE = \"GET_EDIT_QUEUE\";\r\nexport const GET_ALL_ROOMS = \"GET_ALL_ROOMS\";\r\n\r\n","import {GET_DOCTORS, GET_DOCTOR} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    doctors : [],\r\n    doctor : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DOCTORS :\r\n            return{\r\n                ...state,\r\n                doctors : action.payload\r\n            };\r\n        case GET_DOCTOR :\r\n            return {\r\n                ...state,\r\n                doctor : action.payload\r\n            };\r\n        default : \r\n        return state;\r\n    }\r\n}","import {GET_ERRORS} from '../actions/Types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_ERRORS :\r\n            return {\r\n                ...state,\r\n                errors : action.payload\r\n            };\r\n        default :\r\n         return state;\r\n    }\r\n    \r\n}","import { GET_PATIENT_SAVE, GET_QUEUE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    patient : {},\r\n    queue : []\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_PATIENT_SAVE :\r\n            return {\r\n                ...state,\r\n                patient : action.payload\r\n            };\r\n        case GET_QUEUE :\r\n            return {\r\n                ...state,\r\n                queue : action.payload\r\n            }\r\n        default : \r\n            return state;\r\n    }\r\n}","import {GET_TOKEN} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    token : [],\r\n    validToken : false\r\n}\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_TOKEN :\r\n            return {\r\n                ...state,\r\n                token : action.payload,\r\n                validToken : action.payload?true:false\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import {GET_DOCTOR_TABLE, GET_QUEUE_TABLE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    tables : [],\r\n    user : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    \r\n    switch(action.type){\r\n        \r\n        case GET_DOCTOR_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload.tables,\r\n                user : action.payload.user\r\n            };\r\n        case GET_QUEUE_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n    \r\n}","import {GET_ALL_ROOMS} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    rooms : []\r\n}\r\n\r\nexport default function  foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_ALL_ROOMS:\r\n            return{\r\n                ...state,\r\n                rooms : action.payload\r\n            };\r\n        default :\r\n          return state;\r\n    }\r\n    \r\n}","import {combineReducers} from 'redux';\r\nimport doctorReducers from './doctorReducer';\r\nimport errorReducer from './errorReducer';\r\nimport PatientReducer from './PatientReducer';\r\nimport AuthReducer from './Authreducer'; \r\nimport Table from './Table';\r\nimport rooms from './rooms';\r\n\r\nexport default combineReducers({\r\n    doctors: doctorReducers,\r\n    patient : PatientReducer,\r\n    errors : errorReducer,\r\n    auth: AuthReducer,\r\n    tables : Table,\r\n    rooms : rooms\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk  from 'redux-thunk';\r\nimport rootReducers from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n// const ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__()\r\nlet store;\r\n\r\n// if(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n//   store = createStore(\r\n//       rootReducers,\r\n//       initialState,\r\n//       compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n//     );\r\n// }else{\r\n  store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  )\r\n// }\r\n\r\nexport default store;","import axios from 'axios';\r\nimport {GET_DOCTORS, GET_DOCTOR, GET_DOCTOR_TABLE, GET_ERRORS} from './Types';\r\n\r\nexport const getAllDoctors = () => async dispatch =>{\r\n    const res = await axios.get(\"api/user\");\r\n        dispatch({\r\n            type:GET_DOCTORS,\r\n            payload:res.data.body\r\n        })\r\n};\r\nexport const getDoctor = (id) => async dispatch =>{\r\n    const res = await axios.get(`api/user/${id}`);\r\n        dispatch({\r\n            type:GET_DOCTOR,\r\n            payload:res.data.body\r\n        });\r\n};\r\nexport const getDoctorTable = () => async dispatch => {\r\n    \r\n    const res = await axios.get(`api/doctor`);\r\n    try {\r\n        dispatch({\r\n            type : GET_DOCTOR_TABLE,\r\n            payload : res.data.body\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const accepted = (id) => async dispatch =>{\r\n    await axios.get(`api/doctor/${id}`);\r\n    dispatch(getDoctorTable());\r\n};\r\n\r\nexport const pushDoctor = (doctor, attach, history) => async dispatch =>{ console.log(doctor);\r\n  if (attach instanceof File) {\r\n    const file = new FormData();\r\n    file.append(\"file\", attach);\r\n    axios.post(\"/api/img/upload\", file)\r\n      .then((res) => {\r\n        doctor.attachmentId = res.data[0];\r\n        console.log(doctor);\r\n        axios.post(\"/api/auth/register\", doctor)\r\n          .then(() => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: {},\r\n            });\r\n            history.push(\"/admin\");\r\n          })\r\n          .catch((error) => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: error.response.data,\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/wrong\");\r\n        console.log(err);\r\n      });\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n        <div className='footer'>\r\n            <div className='container'>\r\n                    <div className='education'>\r\n                        <div className='clinic'>Clinic_Name</div>\r\n                        <div className='footer-ul'>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                            <li className=\"avtive\">About us</li>\r\n                            <li>Doctors</li>\r\n                            <li>Payment</li>\r\n                            <li>wffhrieuf</li>\r\n                        </ul>\r\n                        </div>          \r\n                    </div>\r\n            </div>\r\n            <div className='reserve'>All service reserved || 2021-2021</div>\r\n        </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_PATIENT_SAVE, GET_QUEUE} from './Types';\r\n\r\n\r\nexport const addPatient = (newPatient, history) => async dispatch =>{\r\n      try {\r\n          const res = await axios.post(\r\n            \"api/patient\",\r\n            newPatient\r\n          )\r\n            dispatch({\r\n            type:GET_PATIENT_SAVE,\r\n            payload : res.data.body\r\n        });\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n          dispatch({\r\n            type:GET_ERRORS,\r\n            payload : error.data\r\n          })\r\n      }; \r\n          \r\n};\r\n\r\nexport const getQueue = (id) => async dispatch =>{\r\n    const res = await axios.get(`api/queue/${id}`)\r\n    dispatch({\r\n        type: GET_QUEUE,\r\n        payload : res.data.body\r\n    })\r\n};","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { getDoctor } from \"../actions/DoctorsActions\";\r\nimport { getQueue } from \"../actions/PatientActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nclass Card extends Component {\r\n\r\n  \r\n    onClick (id){\r\n        this.props.getDoctor(id);\r\n        this.props.getQueue(id);\r\n    }\r\n    render() {\r\n        const {doctor} = this.props;\r\n        return (\r\n          <div className=\"card\">\r\n            <img\r\n              className=\"card-img-top\"\r\n              src={\r\n                \"http://localhost:8080/api/img/download/\" +\r\n                doctor.attachment.id\r\n              }\r\n              alt=\"rasm topilmadi\"\r\n            />\r\n            <div className=\"card-body\">\r\n              <p className=\"job\">{doctor.speciality}</p>\r\n              <p className=\"card-title\">\r\n                {doctor.firstName} {doctor.lastName}\r\n              </p>\r\n              <Link\r\n                onClick={this.onClick(doctor.id)}\r\n                to={`/listRegister/${doctor.id}`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Qabulga yozilish\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nCard.propTypes = {\r\n  getDoctor: PropTypes.func.isRequired,\r\n  getQueue: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default connect(null, { getDoctor, getQueue })(Card);\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst setJWToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } \r\n};\r\nexport default setJWToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_TOKEN } from \"../actions/Types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"../utils/setJWToken\";\r\n\r\nexport const getToken = (login, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"api/auth/login\", login);\r\n    const token = await res.data.body.token;\r\n    sessionStorage.setItem(\"attachmentId\",res.data.body.attachmentId);\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n    const decode = await jwt_decode(token);\r\n    // switch (decode.auth.token.role[0].roleName) {\r\n    //   case \"admin\":\r\n    //     history.push(\"/admin\");\r\n    //     break;\r\n    //   case \"doctor\":\r\n    //     history.push(\"/doctor\");\r\n    //     break;\r\n    //   default:\r\n    //     history.push(\"/\");\r\n    // }\r\n    dispatch(setCurrentUser(decode));\r\n  } catch (errors) {\r\n    console.log(errors);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: errors.response.data,\r\n    });\r\n  }\r\n};\r\nexport const setCurrentUser = (decode) => {console.log(\"casc\");\r\n  return {\r\n    type: GET_TOKEN,\r\n    payload: decode,\r\n  };\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header from future request\r\n  setJWToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from '../actions/AuthAction';\r\n\r\n\r\n\r\nclass  Navbar extends Component{\r\n\r\n \r\n\r\n    logout = () => {\r\n            this.props.logout();\r\n            window.location.href = \"/\"\r\n    };\r\n\r\n    \r\n    signUpChecking (auth){\r\n\r\n        const {token, validToken} = auth\r\n\r\n        if (validToken) {\r\n            if (token.role[0].roleName===\"doctor\") { \r\n                return (\r\n                  <Link style={{color:'white'}} to={`/doctor`}>\r\n                    <i className=\"fas fa-user-circle mr-1\"></i>\r\n                    {token.username}\r\n                  </Link>\r\n                );\r\n            }\r\n        }else{\r\n            return (\r\n              <Link className=\"nav-link text-white\" to=\"/admin\">\r\n                <h4>Home</h4>\r\n              </Link>\r\n            );\r\n        } \r\n    }\r\n\r\n    signInChecking(auth){\r\n\r\n        if (auth.validToken) {\r\n            return (\r\n                <Link className=\"nav-link bg-red text-white\" onClick={this.logout} to=\"logout\">\r\n                    Logout\r\n                </Link>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n                Login\r\n            </Link>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  render(){ \r\n\r\n    return (\r\n    <nav className={this.props.auth.validToken?` navbar bg-info pl-5 pr-5`:`navbar`} style={{borderRadius:\"10px\"}} >\r\n        {this.signUpChecking(this.props.auth)}\r\n        <ul className =\"navbar-nav\">\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Rus</Link></li>\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Uzb</Link></li>\r\n            <li className=\"nav-item\">\r\n                {this.signInChecking(this.props.auth)}\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n  }\r\n};\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    auth : state.auth\r\n});\r\n\r\nexport default connect(mapStateToPorps,{logout}) (Navbar);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getAllDoctors} from '../actions/DoctorsActions';\r\nimport Footer from './Footer';\r\nimport Card from './Card';\r\nimport '../Home.css';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount(){\r\n        this.props.getAllDoctors();\r\n    }\r\n    render() {\r\n        const {doctors} = this.props.doctors;\r\n        return (\r\n        <div className='container-fuild'>\r\n            <div className='container'>\r\n                <Navbar />\r\n                <div className='header'>\r\n                <div className='lorem'>\r\n                    <h1>Lorem Ipsum</h1>\r\n                    <p>Lorem ipsum is simvefsoivov ornibnu nirunb nirutun unrtub \r\n                        eoubviru nrtuparghru rtubirtoj rt rpotjhtr jortjhoitbj erthbu\r\n                        tijriubhiu retpu jrotjoitrj rotiohegorij rotigjoergjpo jrotjo\r\n                    </p>\r\n                </div>\r\n                \r\n                <div className=\"cards\" >\r\n                {doctors.filter(doctor => doctor.roles[0].roleName !== 'admin').map((doctor) => {\r\n                    return(\r\n                        <Card doctor={doctor} key={doctor.id} />\r\n                    );   \r\n                                    \r\n                })}\r\n                </div>\r\n                </div>           \r\n            </div>\r\n            <Footer/>\r\n          </div>\r\n        )\r\n    }\r\n};\r\n\r\nHome.propTypes = {\r\n    getAllDoctors : PropTypes.func.isRequired,\r\n    doctors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    doctors: state.doctors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAllDoctors}) (Home);\r\n","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Not Found\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import {GET_ERRORS, GET_QUEUE_TABLE} from './Types';\r\nimport axios from 'axios';\r\n\r\nexport const getAllQueue = (type) => async dispatch => {\r\n    const res = await axios.post(\r\n      `api/queue`,\r\n      type\r\n    );\r\n    try{\r\n        dispatch({\r\n        type : GET_QUEUE_TABLE,\r\n        payload : res.data.body\r\n    })\r\n    }catch(error){\r\n        dispatch({\r\n        type : GET_ERRORS,\r\n        payload : res.data.body\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteQueue = (id, type) => async (dispatch) => {\r\n  await axios.get(`api/queue/delete/${id}`)\r\n  dispatch(getAllQueue(type));\r\n};\r\n\r\nexport const addQueue = (id,type) => async dispatch => {\r\n  await axios.get(`api/queue/addQueue/${id}`);\r\n  dispatch(getAllQueue(type));\r\n};\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addPatient} from '../actions/PatientActions';\r\nimport {getAllQueue} from '../actions/QueueActions';\r\nimport {getDoctor} from '../actions/DoctorsActions';\r\n\r\n\r\nclass Personal extends Component {\r\n  \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            firstName : '',\r\n            lastName : '',\r\n            phone : ''\r\n           \r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n   componentDidMount(){\r\n        this.props.getAllQueue();\r\n   }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n      e.preventDefault()\r\n      const newPatient = {\r\n          firstName : this.state.firstName,\r\n          lastName : this.state.lastName,\r\n          phone : this.state.phone,\r\n          doctorId : this.props.data.id\r\n      }\r\n      this.props.addPatient(newPatient, this.props.history)\r\n    }\r\n    render() {\r\n      const {queue, data} = this.props;\r\n      const size  = queue.length;\r\n      console.log(data); console.log(queue);\r\n        return (\r\n          <div className=\"list\">\r\n            <p>Toshkent viloyat xususiy klinika stomotologi</p>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={\r\n                    \"http://localhost:8080/api/img/download/\" +\r\n                    sessionStorage.getItem(\"id\")\r\n                  }\r\n                  alt=\"rasm topilmadi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <p className=\"fullName\">\r\n                  {this.props.data.firstName} {this.props.data.lastName}{\"\"}\r\n                  {this.props.data.middleName}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <p className=\"job\">\r\n                  <b>Mutaxasisligi:</b>\r\n                  {this.props.data.speciality}\r\n                </p>\r\n                <p className=\"job\">\r\n                  <b>O'quv yo'nalishi</b> {this.props.data.speciality}\r\n                </p>\r\n                <p className=\"job\">\r\n                  <b>O'quv yo'nalishi</b> {this.props.data.speciality}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <Link to=\"/\" className=\"btn btn-success\">\r\n                  Boshqa bo'lim tanlash\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#myModal\"\r\n                >\r\n                  Ro'yhatga yozilish\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {queue.map((que, index) => {\r\n                return (\r\n                  <div className=\"col-md-4 mb-4\" key={que.id}>\r\n                    <p className=\"btn-green index\">\r\n                      {index + 1}){que.id}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"modal\" id=\"submit\">\r\n              <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-body\">\r\n                    <form className=\"needs-validation\">\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          Ism:\r\n                        </div>{\" \"}\r\n                        <strong>{this.state.firstName}</strong>{\" \"}\r\n                      </p>\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          Familiya:\r\n                        </div>{\" \"}\r\n                        <strong>{this.state.lastName}</strong>{\" \"}\r\n                      </p>\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          Tel-raqam:\r\n                        </div>{\" \"}\r\n                        <strong>{this.state.phone}</strong>{\" \"}\r\n                      </p>\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          Price:\r\n                        </div>{\" \"}\r\n                        <strong>{this.props.data.price}</strong>{\" \"}\r\n                      </p>\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          navbat:\r\n                        </div>{\" \"}\r\n                        <strong>{size + 1}</strong>{\" \"}\r\n                      </p>\r\n                      <p>\r\n                        <div\r\n                          style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        >\r\n                          Id-raqam:\r\n                        </div>{\" \"}\r\n                        <strong>{this.props.data.id}</strong>{\" \"}\r\n                      </p>\r\n                      <div className=\"col-md-12\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary\"\r\n                          data-toggle=\"modal\"\r\n                          data-dismiss=\"modal\"\r\n                          onClick={this.onSubmit}\r\n                        >\r\n                          Tasdiqlash\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal\" id=\"myModal\">\r\n              <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-body\">\r\n                    <form className=\"needs-validation\">\r\n                      <div className=\"form-group\">\r\n                        <label>First Name:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"uname\"\r\n                          placeholder=\"Enter firstName\"\r\n                          name=\"firstName\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                        <div className=\"valid-feedback\">Valid.</div>\r\n                        <div className=\"invalid-feedback\">\r\n                          Please fill out this field.\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Last Name:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"pwd\"\r\n                          placeholder=\"Enter lastName\"\r\n                          name=\"lastName\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                        <div className=\"valid-feedback\">Valid.</div>\r\n                        <div className=\"invalid-feedback\">\r\n                          Please fill out this field.\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Phone number:</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"phone\"\r\n                          placeholder=\"+998936667205\"\r\n                          name=\"phone\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                        <div className=\"valid-feedback\">Valid.</div>\r\n                        <div className=\"invalid-feedback\">\r\n                          Please fill out this field.\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#submit\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          Ro'yhatga yozilish\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      data-dismiss=\"modal\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nPersonal.propTypes={\r\n    addPatient : PropTypes.func.isRequired,\r\n    getAllQueue : PropTypes.func.isRequired,\r\n    getDoctor : PropTypes.func.isRequired,\r\n    patient : PropTypes.object.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    patient : state.patient,\r\n    errors : state.errors\r\n});\r\n\r\nexport default connect(mapStateToPorps, {addPatient, getAllQueue, getDoctor}) (Personal);\r\n","import React, { Component } from 'react';\r\nimport Personal from './Personal';\r\nimport Footer from './Footer'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getDoctor} from '../actions/DoctorsActions';\r\nimport {getQueue} from '../actions/PatientActions';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nclass ListRegister extends Component {\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getDoctor(id);\r\n        this.props.getQueue(id);\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        sessionStorage.setItem(\"id\", newProps.doctor.attachment.id);\r\n    }\r\n    render() {\r\n        \r\n        const {queue, doctor} = this.props;\r\n        \r\n        return (\r\n        <div className='container-fuild bg'>\r\n            <Navbar />\r\n            <div className='container'>\r\n                <Personal data={doctor} queue={queue} />                   \r\n            </div>\r\n            <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nListRegister.propTypes = {\r\n    getDoctor: PropTypes.func.isRequired,\r\n    doctor : PropTypes.object.isRequired,\r\n    getQueue: PropTypes.func.isRequired,\r\n    queue : PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    doctor : state.doctors.doctor,\r\n    queue : state.patient.queue\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDoctor,getQueue}) (ListRegister);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../actions/AuthAction\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.getErrors = this.getErrors.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const login = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.getToken(login, this.props.history);\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.auth.validToken) {\r\n      if (newProps.auth.token.role[0].roleName === \"admin\") {\r\n        newProps.history.push(\"/admin\");\r\n      } else { \r\n        newProps.history.push(\"/doctor\");\r\n      }\r\n    }\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors.errors });\r\n    }\r\n  }\r\n\r\n  getErrors(errors) {\r\n    if (errors) {\r\n      if (errors.invalid)\r\n        return (\r\n          <div className=\"pb-3 pt-3\">\r\n            <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n              {errors.invalid}\r\n            </div>\r\n          </div>\r\n        );\r\n      if (errors.username) {\r\n        return (\r\n          <div className=\"pb-3 pt-3\">\r\n            <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n              {errors.username}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container m-5\">\r\n        <h1 className=\"text-center\">Login</h1>\r\n        <div className=\"mt-5\" style={{ width: \"400px\" }}>\r\n          {this.getErrors(errors)}\r\n          <form className=\"needs-validation\" onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"uname\"\r\n                placeholder=\"Enter username\"\r\n                name=\"username\"\r\n                onChange={this.onChange}\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"pwd\"\r\n                placeholder=\"Enter password\"\r\n                name=\"password\"\r\n                onChange={this.onChange}\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  getToken: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n  errors: state.errors,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToPorps, { getToken })(Login);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {logout} from '../actions/AuthAction';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    \r\n  logout = () => {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  signInChecking(auth){\r\n\r\n        if (auth.validToken) {\r\n            return (\r\n                <Link className=\"nav-link bg-red text-white\" onClick={this.logout} to=\"logout\">\r\n                    Logout\r\n                </Link>\r\n            )\r\n        }\r\n          return (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n                Login\r\n            </Link>\r\n        )\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar bg-dark navbar-dark pl-2 pr-2 m-1\"\r\n        style={{ borderRadius: \"10px\" }}\r\n      >\r\n        <Link className=\"navbar-brand\" to=\"/admin\">\r\n          Name\r\n        </Link>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item first\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              <i className=\"fa fa-phone\"></i>9387458324\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/addDoctor\">\r\n              <i className=\"fa fa-phone\"></i>Add Doctor\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              Rus\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              Uzb\r\n            </Link>\r\n          </li>\r\n          {this.signInChecking(this.props.auth)}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToPorps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getAllQueue, deleteQueue, addQueue} from '../../actions/QueueActions';\r\nimport Header from '../Header';\r\n\r\n\r\nclass Queue extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tables: [],\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n    this.addQueue = this.addQueue.bind(this);\r\n    this.deleteQueue = this.deleteQueue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      this.props.auth.token.role[0].roleName !== \"admin\"\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    this.props.getAllQueue(\"A\");\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      tables: newProps.tables,\r\n    });\r\n  }\r\n  onClick(type) {\r\n    this.props.getAllQueue(type);\r\n    this.setState({\r\n      tables: this.props.tables,\r\n    });\r\n  }\r\n  deleteQueue(id, type) {\r\n    this.props.deleteQueue(id, type);\r\n  }\r\n  addQueue(id, type) {\r\n    this.props.addQueue(id, type);\r\n  }\r\n\r\n  render() {\r\n    const { tables } = this.state;\r\n    let tableBody;\r\n    if (tables.length > 0) {\r\n      tableBody = tables.map((row) => {\r\n        return (\r\n          <tr key={row.id} className=\"text-center\">\r\n            <td>{row.name}</td>\r\n            <td>{row.id}</td>\r\n            <td>{row.patient.firstName}</td>\r\n            <td>{row.patient.lastName}</td>\r\n            <td>{row.patient.phone}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => this.addQueue(row.id, row.user.category)}\r\n                className={`${\r\n                  row.status ? \"btn btn-light\" : \"btn btn-primary\"\r\n                }`}\r\n                style={{\r\n                  width: \"100px\",\r\n                  fontWeight: \"bold\",\r\n                  verticalAlign: \"center\",\r\n                }}\r\n              >\r\n                ok\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                style={{\r\n                  width: \"100px\",\r\n                  fontWeight: \"bold\",\r\n                  verticalAlign: \"center\",\r\n                }}\r\n                onClick={() => this.deleteQueue(row.id, row.user.category)}\r\n              >\r\n                delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    } else {\r\n      tableBody = \"loading...\";\r\n    }\r\n    return (\r\n      <>\r\n        <div style={{ width: \"1400px\", margin: \"0 auto\" }}>\r\n          <Header />\r\n          <div className=\"btn-group \">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"A\")}\r\n            >\r\n              A\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"B\")}\r\n            >\r\n              B\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"C\")}\r\n            >\r\n              C\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"D\")}\r\n            >\r\n              D\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"E\")}\r\n            >\r\n              E\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light border pr-5 pl-5 mr-2\"\r\n              style={{ borderRadius: \"10px\", fontWeight: \"bold\" }}\r\n              onClick={() => this.onClick(\"F\")}\r\n            >\r\n              F\r\n            </button>\r\n          </div>\r\n          <table\r\n            className=\"table table-sm border-bottom\"\r\n            style={{ borderTop: \"none\" }}\r\n          >\r\n            <thead>\r\n              <tr className=\"text-center\">\r\n                <th className=\"pt-2 pb-2\">Navbat_r</th>\r\n                <th className=\"pt-2 pb-2\">#Id raqam</th>\r\n                <th className=\"pt-2 pb-2\">Bemor_ismi</th>\r\n                <th className=\"pt-2 pb-2\">Bemor_Fam</th>\r\n                <th className=\"pt-2 pb-2\">Bemor_tel</th>\r\n                <th className=\"pt-2 pb-2\"></th>\r\n                <th className=\"pt-2 pb-2\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{tableBody}</tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nQueue.propTypes = {\r\n    getAllQueue : PropTypes.func.isRequired,\r\n    tables : PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables,\r\n    auth : state.auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToPorps, {getAllQueue, deleteQueue, addQueue})  (Queue);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getDoctorTable, accepted} from '../../actions/DoctorsActions';\r\nimport Navbar from '../Navbar';\r\n\r\n\r\nclass Doctor extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            errors : '',\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){ console.log(this.props.auth.token.role[0].roleName);\r\n      if (\r\n        this.props.auth.token.role[0].roleName !== \"doctor\"\r\n      ) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n        this.props.getDoctorTable();\r\n    }\r\n\r\n    onClick(id){\r\n        this.props.accepted(id);\r\n    }\r\n    render() {\r\n        let tartib = 0;\r\n        const tables = this.props.tables;\r\n        const {firstName, lastName, middleName, speciality} = this.props.user;\r\n        let tableBody;\r\n        tableBody = tables.filter(row => row.status === true).map(row =>{\r\n            return(\r\n              <tr className=\"text-center\" key={row.id}>\r\n                <td>{(tartib += 1)}</td>\r\n                <td>#{row.id}</td>\r\n                <td>{row.patient.firstName}</td>\r\n                <td>{row.patient.lastName}</td>\r\n                <td>{row.patient.phone}</td>\r\n                <td className=\"text-center\">\r\n                  <button\r\n                    onClick={() => this.onClick(row.id)}\r\n                    className={`${\r\n                      row.accepted\r\n                        ? \"btn btn-light\"\r\n                        : \"btn btn-primary\"\r\n                    }`}\r\n                  >\r\n                    Qabulni yakunlash\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n        })\r\n    \r\n        return (\r\n          <div className=\"doctor\">\r\n            <Navbar />\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-3 bg-primary text-center\"\r\n                style={{ height: \"500px\", color: \"white\" }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    padding: \"20px\",\r\n                    width: \"300px\",\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                  className=\"m-4\"\r\n                >\r\n                  Toshkent viloyati xususiy klinika {speciality}\r\n                </p>\r\n                <img\r\n                  className=\"card-img-top mb-4\"\r\n                  src={\r\n                    \"http://localhost:8080/api/img/download/\" + sessionStorage.getItem(\"attachmentId\") \r\n                  }\r\n                  alt=\"rasm topilmadi\"\r\n                />\r\n                <p>\r\n                  <strong>\r\n                    {firstName} {lastName} {middleName}\r\n                  </strong>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-9 \">\r\n                <table className=\"table table-bordered table-sm table-striped\">\r\n                  <thead>\r\n                    <tr className=\"text-center p-5\">\r\n                      <th>Navbat</th>\r\n                      <th>#Id raqam</th>\r\n                      <th>Bemor_ismi</th>\r\n                      <th>Bemor_Fam</th>\r\n                      <th>Bemor_tel</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>{tableBody}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nDoctor.propTypes ={\r\n    getDoctorTable: PropTypes.func.isRequired,\r\n    acctepted : PropTypes.func.isRequired,\r\n    tables : PropTypes.array.isRequired,\r\n    user : PropTypes.object.isRequired,\r\n    auth : PropTypes.object.isRequired\r\n\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables,\r\n    user : state.tables.user,\r\n    auth : state.auth\r\n});\r\n\r\nexport default connect(mapStateToPorps, {getDoctorTable, accepted}) (Doctor);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {get_all_rooms} from '../../actions/RoomsActions';\r\nimport {pushDoctor} from '../../actions/DoctorsActions';\r\nimport Header from '../Header';\r\n\r\n\r\nclass addDoctor extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      middleName: \"\",\r\n      price: \"\",\r\n      speciality: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      category: \"\",\r\n      rooms: \"\",\r\n      attachmentId: \"\",\r\n      Rooms: [],\r\n      file: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onFileChange = this.onFileChange.bind(this);       \r\n  }\r\n  componentDidMount() {\r\n    if (\r\n      !this.props.auth.validToken &&\r\n      this.props.auth.token.role[0].roleName !== \"admin\"\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      this.props.get_all_rooms();\r\n    }\r\n  }\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      Rooms: newProps.rooms.rooms,\r\n    });\r\n  }\r\n\r\n  onFileChange  (e) {\r\n    this.setState({ file: e.target.files[0] });\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault(); \r\n    const doctor = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      middleName: this.state.middleName,\r\n      price: this.state.price,\r\n      speciality: this.state.speciality,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      category: this.state.category,\r\n      rooms: this.state.rooms,\r\n      attachmentId: this.state.attachmentId,\r\n    };\r\n    this.props.pushDoctor(doctor,this.state.file, this.props.history);\r\n  }\r\n  render() {\r\n    const { Rooms } = this.state;\r\n    return (\r\n      <>\r\n        <div style={{ width: \"1440px\", margin: \"0 auto\" }}>\r\n          <Header />\r\n          <form\r\n            style={{ width: \"100%\", margin: \"0 auto\", marginTop: \"20px\" }}\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", marginRight: \"55px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"firstName\">First Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter First Name\"\r\n                onChange={this.onChange}\r\n                name=\"firstName\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"lastName\">LastName:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"lastName\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter Last Name\"\r\n                name=\"lastName\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", marginRight: \"55px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"middleName\">Middle Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"middleName\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter Middle Name\"\r\n                name=\"middleName\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"price\">Price:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"price\"\r\n                onChange={this.onChange}\r\n                placeholder=\"50000\"\r\n                name=\"price\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", marginRight: \"55px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"speciality\">Speciality:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"speciality\"\r\n                onChange={this.onChange}\r\n                placeholder=\"lor\"\r\n                name=\"speciality\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                onChange={this.onChange}\r\n                placeholder=\"username\"\r\n                name=\"username\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", marginRight: \"55px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                onChange={this.onChange}\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"rooms\">Choose a rooms: </label>\r\n              <input\r\n                list=\"room\"\r\n                name=\"rooms\"\r\n                id=\"rooms\"\r\n                onChange={this.onChange}\r\n              />\r\n              <datalist\r\n                name=\"rooms\"\r\n                id=\"room\"\r\n                style={{\r\n                  padding: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                  marginLeft: \"10px\",\r\n                  outline: \"none\",\r\n                }}\r\n              >\r\n                {Rooms.map((room) => {\r\n                  return (\r\n                    <option value={room.floor} key={room.id}>\r\n                      {room.floor} qavat {room.number} xona\r\n                    </option>\r\n                  );\r\n                })}\r\n              </datalist>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"category\">Choose a category: </label>\r\n              <input\r\n                list=\"categorys\"\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={this.onChange}\r\n              />\r\n              <datalist\r\n                id=\"categorys\"\r\n                style={{\r\n                  padding: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                  marginLeft: \"10px\",\r\n                  outline: \"none\",\r\n                }}\r\n              >\r\n                <option value=\"A\" />\r\n                <option value=\"B\" />\r\n                <option value=\"C\" />\r\n                <option value=\"D\" />\r\n              </datalist>\r\n            </div>\r\n            <div\r\n              className=\"form-group\"\r\n              style={{ width: \"690px\", marginRight: \"55px\", float: \"left\" }}\r\n            >\r\n              <label htmlFor=\"Img\">Rasm kiriting:</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                id=\"Img\"\r\n                onChange={this.onFileChange}\r\n                placeholder=\"Rasm kiriting\"\r\n                name={\"file\"}\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\naddDoctor.propTypes ={\r\n    get_all_rooms : PropTypes.func.isRequired,\r\n    pushDoctor : PropTypes.func.isRequired,\r\n    rooms : PropTypes.object.isRequired,\r\n    auth : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    rooms : state.rooms,\r\n    auth : state.auth\r\n})\r\nexport default connect(mapStateToPorps, {get_all_rooms, pushDoctor}) (addDoctor);\r\n","import axios from 'axios';\r\nimport {GET_ALL_ROOMS} from './Types';\r\n\r\nexport const get_all_rooms = () => async dispatch =>{\r\n    \r\n    const rooms = await axios.get(\r\n      \"api/room\"\r\n    );\r\n    dispatch({\r\n        type:GET_ALL_ROOMS,\r\n        payload : rooms.data.body\r\n    });\r\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport Home from './component/Home';\nimport NotFound from './component/exceptions/NotFound';\nimport ListRegister from './component/ListRegister';\nimport Login from './component/authtication/Login';\nimport Admin from './component/admin/Queue';\nimport jwt_decode from 'jwt-decode';\nimport Doctor from './component/doctor/Doctor';\nimport setJWToken from './utils/setJWToken';\nimport {GET_TOKEN} from './actions/Types';\nimport PrivateRoute from './component/common/PrivateRoute';\nimport addDoctor from './component/admin/addDoctor';\n\n\nconst token = localStorage.jwtToken;\nif (token) {\n    setJWToken(token);\n    const decoded = jwt_decode(token)\n    store.dispatch({\n        type: GET_TOKEN,\n        payload: decoded\n    })   \n}\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\"> \n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path='/listRegister/:id' component={ListRegister} /> \n              <Route exact path='/login' component={Login} />\n              <Route exact path='/addDoctor' component={addDoctor} />\n          </div> \n          <Switch>\n            <PrivateRoute exact path=\"/admin\" component={Admin} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/doctor\" component={Doctor} />\n          </Switch>\n              <Route exact path=\"/\"  component={NotFound} />\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n};\n\nexport default  (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:8080/\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}